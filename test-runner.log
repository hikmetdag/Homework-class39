2022-09-08 12:12:58 info: ---------------------------------------
2022-09-08 12:12:58 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-09-08 12:12:58 info: ---------------------------------------
2022-09-08 12:13:05 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✓ should exist and be executable (2 ms)
    ✕ should have all TODO comments removed (2 ms)
    ✓ `getAnonName` should not contain unneeded console.log calls (1 ms)
    ✓ should call `new Promise()`
    ✓ should take a single argument
    ✓ `resolve()` should be called with a one argument (1 ms)
    ✓ `reject()` should be called with a one argument
    ✓ should resolve when called with a string argument (2 ms)
    ✕ should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "You didn't pass in a first name!"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      93 |   });
      94 | });
      95 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:285:22)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:36)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.119 s
Ran all test suites matching /ex1-johnWho.test.js/i.

  ●  Cannot log after tests are done. Did you forget to wait for something async in your test?
    Attempted to log "You didn't pass in a first name!".

      28 |
      29 | };
    > 30 |
         | ^
      31 |
      32 | getAnonName()
      33 |   .then((res) => { console.log(res); })

      at console.log (node_modules/@jest/console/build/CustomConsole.js:187:10)
      at 3-UsingAPIs/Week1/homework/ex1-johnWho.js:30:11
2022-09-08 12:13:08 error: *** ESLint Report ***

ex1-johnWho.js
  38:3  error  'main' is not defined  no-undef

✖ 1 problem (1 error, 0 warnings)


2022-09-08 12:14:12 info: Disclaimer turned off
2022-09-08 12:14:27 info: ---------------------------------------
2022-09-08 12:14:27 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-09-08 12:14:27 info: ---------------------------------------
2022-09-08 12:14:34 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✕ should exist and be executable (4 ms)
    ✕ should have all TODO comments removed (1 ms)
    ✓ `getAnonName` should not contain unneeded console.log calls (1 ms)
    ✓ should call `new Promise()` (1 ms)
    ✓ should take a single argument
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✕ should resolve when called with a string argument
    ✕ should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      46 |
      47 |   test('should exist and be executable', () => {
    > 48 |     expect(exported).toBeDefined();
         |                      ^
      49 |   });
      50 |
      51 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:48:22)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeDefined()

    Received: undefined

      71 |   test('should resolve when called with a string argument', async () => {
      72 |     expect.assertions(3);
    > 73 |     expect(exported).toBeDefined();
         |                      ^
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')
      76 |       .mockImplementation((cb) => cb());

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:73:22)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeDefined()

    Received: undefined

      83 |   test('should reject with an Error object when called without an argument', async () => {
      84 |     expect.assertions(3);
    > 85 |     expect(exported).toBeDefined();
         |                      ^
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')
      88 |       .mockImplementation((cb) => cb());

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:85:22)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 5 passed, 9 total
Snapshots:   0 total
Time:        1.335 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-09-08 12:14:37 error: *** ESLint Report ***

ex1-johnWho.js
  35:2  error  'n' is not defined  no-undef

✖ 1 problem (1 error, 0 warnings)


2022-09-08 12:30:10 info: ---------------------------------------
2022-09-08 12:30:10 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-09-08 12:30:10 info: ---------------------------------------
2022-09-08 12:30:19 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✓ should exist and be executable (2 ms)
    ✕ should have all TODO comments removed (5 ms)
    ✓ `getAnonName` should not contain unneeded console.log calls (1 ms)
    ✓ should call `new Promise()`
    ✓ should take a single argument (1 ms)
    ✓ `resolve()` should be called with a one argument (1 ms)
    ✓ `reject()` should be called with a one argument
    ✓ should resolve when called with a string argument (2 ms)
    ✓ should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        1.331 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-09-08 12:31:33 info: ---------------------------------------
2022-09-08 12:31:33 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-09-08 12:31:33 info: ---------------------------------------
2022-09-08 12:31:40 info: All unit tests passed.
2022-09-08 12:31:47 info: All steps were completed successfully
2022-09-08 12:47:20 info: -------------------------------------------------
2022-09-08 12:47:20 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-09-08 12:47:20 info: -------------------------------------------------
2022-09-08 12:47:29 info: All unit tests passed.
2022-09-08 12:47:37 info: All steps were completed successfully
2022-09-08 09:48:07 info: ---------------------------------------
2022-09-08 09:48:07 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-09-08 09:48:07 info: ---------------------------------------
2022-09-08 09:48:14 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    ✕ should exist and be executable (3 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ should call `new Promise()`
    ✕ `resolve()` should be called with a one argument (2 ms)
    ✕ `reject()` should be called with a one argument
    ✕ should resolve when the die settles successfully
    ✕ should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      32 |
      33 |   test('should exist and be executable', () => {
    > 34 |     expect(exported).toBeDefined();
         |                      ^
      35 |   });
      36 |
      37 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:34:22)

  ● rollDie › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should call `new Promise()`', () => {
    > 40 |     expect(state.newPromise).toBeDefined();
         |                              ^
      41 |   });
      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:40:30)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

  ● rollDie › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      46 |
      47 |   test('`reject()` should be called with a one argument', () => {
    > 48 |     expect(state.reject).toBe(1);
         |                          ^
      49 |   });
      50 |
      51 |   test('should resolve when the die settles successfully', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:48:26)

  ● rollDie › should resolve when the die settles successfully

    expect(received).toBeDefined()

    Received: undefined

      51 |   test('should resolve when the die settles successfully', () => {
      52 |     expect.assertions(3);
    > 53 |     expect(exported).toBeDefined();
         |                      ^
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      56 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:53:22)

  ● rollDie › should resolve when the die settles successfully

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      50 |
      51 |   test('should resolve when the die settles successfully', () => {
    > 52 |     expect.assertions(3);
         |            ^
      53 |     expect(exported).toBeDefined();
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:52:12)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect(received).toBeDefined()

    Received: undefined

      74 |   test('should reject with an Error when the die rolls off the table', async () => {
      75 |     expect.assertions(3);
    > 76 |     expect(exported).toBeDefined();
         |                      ^
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      79 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:76:22)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      73 |
      74 |   test('should reject with an Error when the die rolls off the table', async () => {
    > 75 |     expect.assertions(3);
         |            ^
      76 |     expect(exported).toBeDefined();
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:75:12)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 1 passed, 7 total
Snapshots:   0 total
Time:        1.506 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-09-08 09:48:17 error: *** ESLint Report ***

ex3-rollDie.js
  62:1  error  Parsing error: Unexpected token

✖ 1 problem (1 error, 0 warnings)


2022-09-08 09:52:45 info: ---------------------------------------
2022-09-08 09:52:45 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-09-08 09:52:45 info: ---------------------------------------
2022-09-08 09:52:54 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    ✕ should exist and be executable (5 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ should call `new Promise()` (1 ms)
    ✕ `resolve()` should be called with a one argument (2 ms)
    ✕ `reject()` should be called with a one argument (1 ms)
    ✕ should resolve when the die settles successfully (1 ms)
    ✕ should reject with an Error when the die rolls off the table

  ● rollDie › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      32 |
      33 |   test('should exist and be executable', () => {
    > 34 |     expect(exported).toBeDefined();
         |                      ^
      35 |   });
      36 |
      37 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:34:22)

  ● rollDie › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should call `new Promise()`', () => {
    > 40 |     expect(state.newPromise).toBeDefined();
         |                              ^
      41 |   });
      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:40:30)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

  ● rollDie › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      46 |
      47 |   test('`reject()` should be called with a one argument', () => {
    > 48 |     expect(state.reject).toBe(1);
         |                          ^
      49 |   });
      50 |
      51 |   test('should resolve when the die settles successfully', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:48:26)

  ● rollDie › should resolve when the die settles successfully

    expect(received).toBeDefined()

    Received: undefined

      51 |   test('should resolve when the die settles successfully', () => {
      52 |     expect.assertions(3);
    > 53 |     expect(exported).toBeDefined();
         |                      ^
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      56 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:53:22)

  ● rollDie › should resolve when the die settles successfully

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      50 |
      51 |   test('should resolve when the die settles successfully', () => {
    > 52 |     expect.assertions(3);
         |            ^
      53 |     expect(exported).toBeDefined();
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:52:12)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect(received).toBeDefined()

    Received: undefined

      74 |   test('should reject with an Error when the die rolls off the table', async () => {
      75 |     expect.assertions(3);
    > 76 |     expect(exported).toBeDefined();
         |                      ^
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      79 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:76:22)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      73 |
      74 |   test('should reject with an Error when the die rolls off the table', async () => {
    > 75 |     expect.assertions(3);
         |            ^
      76 |     expect(exported).toBeDefined();
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:75:12)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 1 passed, 7 total
Snapshots:   0 total
Time:        1.477 s, estimated 2 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-09-08 09:52:59 error: *** ESLint Report ***

ex3-rollDie.js
  61:1  error  Parsing error: Unexpected token

✖ 1 problem (1 error, 0 warnings)


2022-09-08 09:56:00 info: ---------------------------------------
2022-09-08 09:56:00 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-09-08 09:56:00 info: ---------------------------------------
2022-09-08 09:56:10 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    ✕ should exist and be executable (5 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ should call `new Promise()`
    ✕ `resolve()` should be called with a one argument (2 ms)
    ✕ `reject()` should be called with a one argument (1 ms)
    ✕ should resolve when the die settles successfully (1 ms)
    ✕ should reject with an Error when the die rolls off the table

  ● rollDie › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      32 |
      33 |   test('should exist and be executable', () => {
    > 34 |     expect(exported).toBeDefined();
         |                      ^
      35 |   });
      36 |
      37 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:34:22)

  ● rollDie › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should call `new Promise()`', () => {
    > 40 |     expect(state.newPromise).toBeDefined();
         |                              ^
      41 |   });
      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:40:30)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

  ● rollDie › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      46 |
      47 |   test('`reject()` should be called with a one argument', () => {
    > 48 |     expect(state.reject).toBe(1);
         |                          ^
      49 |   });
      50 |
      51 |   test('should resolve when the die settles successfully', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:48:26)

  ● rollDie › should resolve when the die settles successfully

    expect(received).toBeDefined()

    Received: undefined

      51 |   test('should resolve when the die settles successfully', () => {
      52 |     expect.assertions(3);
    > 53 |     expect(exported).toBeDefined();
         |                      ^
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      56 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:53:22)

  ● rollDie › should resolve when the die settles successfully

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      50 |
      51 |   test('should resolve when the die settles successfully', () => {
    > 52 |     expect.assertions(3);
         |            ^
      53 |     expect(exported).toBeDefined();
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:52:12)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect(received).toBeDefined()

    Received: undefined

      74 |   test('should reject with an Error when the die rolls off the table', async () => {
      75 |     expect.assertions(3);
    > 76 |     expect(exported).toBeDefined();
         |                      ^
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      79 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:76:22)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      73 |
      74 |   test('should reject with an Error when the die rolls off the table', async () => {
    > 75 |     expect.assertions(3);
         |            ^
      76 |     expect(exported).toBeDefined();
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:75:12)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 1 passed, 7 total
Snapshots:   0 total
Time:        1.443 s, estimated 2 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-09-08 09:56:16 error: *** ESLint Report ***

ex3-rollDie.js
  61:1  error  Parsing error: Unexpected token

✖ 1 problem (1 error, 0 warnings)


2022-09-08 09:57:03 info: ---------------------------------------
2022-09-08 09:57:03 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-09-08 09:57:03 info: ---------------------------------------
2022-09-08 09:57:08 info: All unit tests passed.
2022-09-08 09:57:14 info: All steps were completed successfully
2022-09-08 10:04:04 info: ---------------------------------------
2022-09-08 10:04:04 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-09-08 10:04:04 info: ---------------------------------------
2022-09-08 10:04:13 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:26
        return reject(new Error('Oops... Die rolled off the table.'));
                      ^

Error: Oops... Die rolled off the table.
    at rollOnce (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:26:23)
    at cb (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:36:26)
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:82:35
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/node_modules/jest-mock/build/index.js:445:39
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/node_modules/jest-mock/build/index.js:453:13
    at mockConstructor (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/node_modules/jest-mock/build/index.js:170:19)
    at rollOnce (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:36:9)
    at cb (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:36:26)
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:82:35
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/node_modules/jest-mock/build/index.js:445:39
2022-09-08 10:04:19 error: *** ESLint Report ***

ex3-rollDie.js
  53:12  error  'res' is defined but never used  no-unused-vars
  53:61  error  'value' is not defined           no-undef

✖ 2 problems (2 errors, 0 warnings)


2022-09-08 10:06:18 info: ---------------------------------------
2022-09-08 10:06:18 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-09-08 10:06:18 info: ---------------------------------------
2022-09-08 10:06:24 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:26
        return reject(new Error('Oops... Die rolled off the table.'));
                      ^

Error: Oops... Die rolled off the table.
    at rollOnce (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:26:23)
    at cb (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:36:26)
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:82:35
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/node_modules/jest-mock/build/index.js:445:39
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/node_modules/jest-mock/build/index.js:453:13
    at mockConstructor (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/node_modules/jest-mock/build/index.js:170:19)
    at rollOnce (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:36:9)
    at cb (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:36:26)
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:82:35
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/node_modules/jest-mock/build/index.js:445:39
2022-09-08 10:09:25 info: ---------------------------------------
2022-09-08 10:09:25 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-09-08 10:09:25 info: ---------------------------------------
2022-09-08 10:09:28 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:24
        reject(new Error('Oops... Die rolled off the table.'));
               ^

Error: Oops... Die rolled off the table.
    at rollOnce (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:24:16)
    at cb (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:32:26)
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:82:35
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/node_modules/jest-mock/build/index.js:445:39
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/node_modules/jest-mock/build/index.js:453:13
    at mockConstructor (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/node_modules/jest-mock/build/index.js:170:19)
    at rollOnce (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:32:9)
    at cb (/Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/homework/ex3-rollDie.js:32:26)
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:82:35
    at /Users/hackyourfuture/Desktop/HYFUTURE-HW/Homework-class39/node_modules/jest-mock/build/index.js:445:39
2022-09-08 10:09:55 info: ---------------------------------------
2022-09-08 10:09:55 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-09-08 10:09:55 info: ---------------------------------------
2022-09-08 10:09:57 info: All unit tests passed.
2022-09-08 10:10:00 info: All steps were completed successfully
2022-09-08 11:02:43 info: ---------------------------------------
2022-09-08 11:02:43 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-09-08 11:02:43 info: ---------------------------------------
2022-09-08 11:02:53 info: All unit tests passed.
2022-09-08 11:03:01 info: All steps were completed successfully
2022-09-08 11:03:32 info: ---------------------------------------
2022-09-08 11:03:32 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-09-08 11:03:32 info: ---------------------------------------
2022-09-08 11:03:37 info: All unit tests passed.
2022-09-08 11:03:43 info: All steps were completed successfully
2022-09-12 10:10:26 info: --------------------------------------------
2022-09-12 10:10:26 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-09-12 10:10:26 info: --------------------------------------------
2022-09-12 10:10:35 info: All unit tests passed.
2022-09-12 10:10:43 info: All steps were completed successfully
2022-09-13 09:44:33 info: ----------------------------------------------
2022-09-13 09:44:33 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-09-13 09:44:33 info: ----------------------------------------------
2022-09-13 09:44:40 info: All unit tests passed.
2022-09-13 09:44:46 info: All steps were completed successfully
